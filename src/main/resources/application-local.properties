potato.profile.active=local

# DATABASE
spring.datasource.url=${datasource url}
spring.datasource.username=${\uC720\uC800\uB124\uC784}
spring.datasource.password=${\uD328\uC2A4\uC6CC\uB4DC}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# TEMPLATE
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.data.redis.repositories.enabled=false

# AES
aes.secret.key=${AES \uC2DC\uD06C\uB9BF\uD0A4}

# ERROR
server.error.whitelabel.enabled=false
server.error.include-stacktrace=never
server.error.path=/error

# \uC774\uBBF8\uC9C0 \uD06C\uAE30 \uC124\uC815
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.max-file-size=10MB

# EHCACHE3
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.main.allow-bean-definition-overriding=true

# OPENAI
openai.secret.key=${openAI \uC2DC\uD06C\uB9BF\uD0A4}

# AWS CLOUD
cloud.aws.credentials.accessKey=${aws cloud \uC811\uADFC\uD0A4}
cloud.aws.credentials.secretKey=${aws clound \uBE44\uBC00\uD0A4}
cloud.aws.region.static=${region}
cloud.aws.stack.auto=false
cloud.aws.s3.bucket=${bucket\uBA85}